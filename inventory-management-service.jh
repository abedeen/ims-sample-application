
entity Tenant{
id String,
company String,
contactEmail String,
contactName String,
contactPhone String,
contactTitle String,
department String,
email String,
logoURL String,
name String
}

entity UserGroup{
id String,
groupName String
}
entity Stock{
id String,
name String,
sku String,
itemId String,
price Long,
quantity String
}
entity OrderItems{
Category String,
condition String,
price String,
quantity String,
vendor String,
status String,
receiveDate Date,
totalSpending Long,
currency String,
item StatusId,
quantityIn Long,
quantityOut Long
notes String
}
entity Orders{
id String,
orderReferenceNumber String,
orderDate Date,
name String,
statusId String,
notes String
}
entity OrderStatus{
id String,
name String
}
entity Vendors{
id String,
name String,
url String,
address String,
contactPerson String
}
entity Category{
id String,
name String,
parentId String,
categoryLevel String
}
entity Condition{
id String,
name String
}

entity Users {
	id String,
	firstName String,
	lastName String,
	email String,
	phoneNumber String,
	commissionPct Long
}
entity ProdName {
id String,
name String
}
relationship OneToOne{
OrderItems {status} to OrderStatus
Orders{vendors} to Vendors
OrderItems{category} to Category
OrderItems{condition} to Condition
OrderItems{names} to ProdName  
}
relationship ManyToOne {
	Users{userGroup} to UserGroup,
    Users{tenant} to Tenant,
     Stock{users} to Users,
     Stock{userGroup} to UserGroup,
      OrderItems{orderItems} to Orders,
      OrderItems{users} to Stock    
}

// defining multiple oneToOne relationships
/*relationship OneToOne {
	//JobHistory{job} to Job,
	//JobHistory{department} to Department,
//	JobHistory{Users} to Users
//}
*/
// Set pagination options

paginate Stock,Orders,Tenant,UserGroup,Users with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl 
// Set an angular suffix
angularSuffix * with ims
